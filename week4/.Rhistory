self_consistency = c(FALSE, TRUE),
chain_depth      = c(1, 2, 3),
retrieval        = c("off","bm25","dense"),
tools_used       = c("none","calculator","code","browser"),
guardrail_level  = c("low","medium","high"),
seed_bucket      = c("fixed","vary-5","vary-10"),
eval_metric      = c("accuracy","bleu","rouge","human-Likert")
)
sizes <- lengths(params)
total <- prod(sizes)
# 2) Base data frame
param_names <- names(params)
df <- data.frame(
parameter = factor(param_names, levels = param_names),
options   = as.numeric(sizes),
index     = seq_along(sizes)
)
df$cum_total <- cumprod(df$options)
# Helper for SI labels
si_lab <- scales::label_number(scale_cut = scales::cut_si(""))
# 3) Single plot: cumulative combos (log scale), x labels show options count
x_labs <- paste0(df$parameter, " (", df$options, ")")
end_lab <- paste0("Final: ", si_lab(max(df$cum_total)), " combos")
p <- ggplot(df, aes(index, cum_total)) +
geom_line() +
geom_point(size = 2) +
annotate(
"text",
x = max(df$index),
y = max(df$cum_total),
label = end_lab,
hjust = -0.05, vjust = 0.5, size = 3.5
) +
coord_cartesian(clip = "off") +
scale_x_continuous(
breaks = df$index,
labels = x_labs,
expand = expansion(mult = c(0.01, 0.08))
) +
scale_y_continuous(
trans = "log10",
labels = si_lab,
expand = expansion(mult = c(0.02, 0.10))
) +
labs(
title = "Language-model configuration space grows multiplicatively",
subtitle = paste0("Even modest per-parameter choices yield ",
format(total, big.mark=","), " unique configurations"),
x = "Parameters (options)",
y = "Total combinations (log scale)"
) +
theme_classic(base_size = 11) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.margin = margin(10, 30, 10, 10)
)
print(p)
ggsave("lm-params-combinatorics_single.png", p, width = 12, height = 6, dpi = 300)
# Minimal, single-plot version -----------------------------------------------
# Only needs ggplot2 and scales
library(ggplot2)
library(scales)
options(scipen = 999)
# 1) Parameter space (same as before)
params <- list(
model            = c("gpt-4","gpt-4o","llama3-70b","mixtral-8x7b"),
temperature      = seq(0.0, 1.0, by = 0.25),
max_tokens       = c(256, 512, 1024),
top_p            = c(0.70, 0.85, 0.95, 1.00),
prompt_style     = c("zero-shot","few-shot","CoT","ToT","self-consistency","reflection"),
few_shot_k       = c(0, 1, 3, 5),
system_role      = c("neutral","helpful","strict","creative"),
decoding         = c("nucleus","temperature","contrastive"),
top_k            = c(0, 20, 40, 80),
presence_penalty = c(0.0, 0.5, 1.0),
frequency_penalty= c(0.0, 0.5, 1.0),
stop_sequences   = c("none","\\n\\n","</tool>"),
n_samples        = c(1, 3, 5),
self_consistency = c(FALSE, TRUE),
chain_depth      = c(1, 2, 3),
retrieval        = c("off","bm25","dense"),
tools_used       = c("none","calculator","code","browser"),
guardrail_level  = c("low","medium","high"),
seed_bucket      = c("fixed","vary-5","vary-10"),
eval_metric      = c("accuracy","bleu","rouge","human-Likert")
)
sizes <- lengths(params)
total <- prod(sizes)
# 2) Base data frame
param_names <- names(params)
df <- data.frame(
parameter = factor(param_names, levels = param_names),
options   = as.numeric(sizes),
index     = seq_along(sizes)
)
df$cum_total <- cumprod(df$options)
# Helper for SI labels
si_lab <- scales::label_number(scale_cut = scales::cut_si(""))
# 3) Single plot: cumulative combos (log scale), x labels show options count
x_labs <- paste0(df$parameter, " (", df$options, ")")
end_lab <- paste0("Final: ", si_lab(max(df$cum_total)), " combos")
p <- ggplot(df, aes(index, cum_total)) +
geom_line() +
geom_point(size = 2) +
annotate(
"text",
x = max(df$index),
y = max(df$cum_total),
label = end_lab,
hjust = -0.1, vjust = 0.5, size = 3.5
) +
coord_cartesian(clip = "off") +
scale_x_continuous(
breaks = df$index,
labels = x_labs,
expand = expansion(mult = c(0.01, 0.08))
) +
scale_y_continuous(
trans = "log10",
labels = si_lab,
expand = expansion(mult = c(0.02, 0.10))
) +
labs(
title = "Language-model configuration space grows multiplicatively",
subtitle = paste0("Even modest per-parameter choices yield ",
format(total, big.mark=","), " unique configurations"),
x = "Parameters (options)",
y = "Total combinations (log scale)"
) +
theme_classic(base_size = 11) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.margin = margin(10, 30, 10, 10)
)
print(p)
ggsave("lm-params-combinatorics_single.png", p, width = 12, height = 6, dpi = 300)
# Minimal, single-plot version -----------------------------------------------
# Only needs ggplot2 and scales
library(ggplot2)
library(scales)
options(scipen = 999)
# 1) Parameter space (same as before)
params <- list(
model            = c("gpt-4","gpt-4o","llama3-70b","mixtral-8x7b"),
temperature      = seq(0.0, 1.0, by = 0.25),
max_tokens       = c(256, 512, 1024),
top_p            = c(0.70, 0.85, 0.95, 1.00),
prompt_style     = c("zero-shot","few-shot","CoT","ToT","self-consistency","reflection"),
few_shot_k       = c(0, 1, 3, 5),
system_role      = c("neutral","helpful","strict","creative"),
decoding         = c("nucleus","temperature","contrastive"),
top_k            = c(0, 20, 40, 80),
presence_penalty = c(0.0, 0.5, 1.0),
frequency_penalty= c(0.0, 0.5, 1.0),
stop_sequences   = c("none","\\n\\n","</tool>"),
n_samples        = c(1, 3, 5),
self_consistency = c(FALSE, TRUE),
chain_depth      = c(1, 2, 3),
retrieval        = c("off","bm25","dense"),
tools_used       = c("none","calculator","code","browser"),
guardrail_level  = c("low","medium","high"),
seed_bucket      = c("fixed","vary-5","vary-10"),
eval_metric      = c("accuracy","bleu","rouge","human-Likert")
)
sizes <- lengths(params)
total <- prod(sizes)
# 2) Base data frame
param_names <- names(params)
df <- data.frame(
parameter = factor(param_names, levels = param_names),
options   = as.numeric(sizes),
index     = seq_along(sizes)
)
df$cum_total <- cumprod(df$options)
# Helper for SI labels
si_lab <- scales::label_number(scale_cut = scales::cut_si(""))
# 3) Single plot: cumulative combos (log scale), x labels show options count
x_labs <- paste0(df$parameter, " (", df$options, ")")
end_lab <- paste0("Final: ", si_lab(max(df$cum_total)), " combos")
p <- ggplot(df, aes(index, cum_total)) +
geom_line() +
geom_point(size = 2) +
annotate(
"text",
x = max(df$index),
y = max(df$cum_total),
label = end_lab,
hjust = -1, vjust = 0.5, size = 3.5
) +
coord_cartesian(clip = "off") +
scale_x_continuous(
breaks = df$index,
labels = x_labs,
expand = expansion(mult = c(0.01, 0.08))
) +
scale_y_continuous(
trans = "log10",
labels = si_lab,
expand = expansion(mult = c(0.02, 0.10))
) +
labs(
title = "Language-model configuration space grows multiplicatively",
subtitle = paste0("Even modest per-parameter choices yield ",
format(total, big.mark=","), " unique configurations"),
x = "Parameters (options)",
y = "Total combinations (log scale)"
) +
theme_classic(base_size = 11) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.margin = margin(10, 30, 10, 10)
)
print(p)
ggsave("lm-params-combinatorics_single.png", p, width = 12, height = 6, dpi = 300)
# Minimal, single-plot version -----------------------------------------------
# Only needs ggplot2 and scales
library(ggplot2)
library(scales)
options(scipen = 999)
# 1) Parameter space (same as before)
params <- list(
model            = c("gpt-4","gpt-4o","llama3-70b","mixtral-8x7b"),
temperature      = seq(0.0, 1.0, by = 0.25),
max_tokens       = c(256, 512, 1024),
top_p            = c(0.70, 0.85, 0.95, 1.00),
prompt_style     = c("zero-shot","few-shot","CoT","ToT","self-consistency","reflection"),
few_shot_k       = c(0, 1, 3, 5),
system_role      = c("neutral","helpful","strict","creative"),
decoding         = c("nucleus","temperature","contrastive"),
top_k            = c(0, 20, 40, 80),
presence_penalty = c(0.0, 0.5, 1.0),
frequency_penalty= c(0.0, 0.5, 1.0),
stop_sequences   = c("none","\\n\\n","</tool>"),
n_samples        = c(1, 3, 5),
self_consistency = c(FALSE, TRUE),
chain_depth      = c(1, 2, 3),
retrieval        = c("off","bm25","dense"),
tools_used       = c("none","calculator","code","browser"),
guardrail_level  = c("low","medium","high"),
seed_bucket      = c("fixed","vary-5","vary-10"),
eval_metric      = c("accuracy","bleu","rouge","human-Likert")
)
sizes <- lengths(params)
total <- prod(sizes)
# 2) Base data frame
param_names <- names(params)
df <- data.frame(
parameter = factor(param_names, levels = param_names),
options   = as.numeric(sizes),
index     = seq_along(sizes)
)
df$cum_total <- cumprod(df$options)
# Helper for SI labels
si_lab <- scales::label_number(scale_cut = scales::cut_si(""))
# 3) Single plot: cumulative combos (log scale), x labels show options count
x_labs <- paste0(df$parameter, " (", df$options, ")")
end_lab <- paste0("Final: ", si_lab(max(df$cum_total)), " combos")
p <- ggplot(df, aes(index, cum_total)) +
geom_line() +
geom_point(size = 2) +
annotate(
"text",
x = max(df$index),
y = max(df$cum_total),
label = end_lab,
hjust = 1, vjust = 0.5, size = 3.5
) +
coord_cartesian(clip = "off") +
scale_x_continuous(
breaks = df$index,
labels = x_labs,
expand = expansion(mult = c(0.01, 0.08))
) +
scale_y_continuous(
trans = "log10",
labels = si_lab,
expand = expansion(mult = c(0.02, 0.10))
) +
labs(
title = "Language-model configuration space grows multiplicatively",
subtitle = paste0("Even modest per-parameter choices yield ",
format(total, big.mark=","), " unique configurations"),
x = "Parameters (options)",
y = "Total combinations (log scale)"
) +
theme_classic(base_size = 11) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.margin = margin(10, 30, 10, 10)
)
print(p)
ggsave("lm-params-combinatorics_single.png", p, width = 12, height = 6, dpi = 300)
# Minimal, single-plot version -----------------------------------------------
# Only needs ggplot2 and scales
library(ggplot2)
library(scales)
options(scipen = 999)
# 1) Parameter space (same as before)
params <- list(
model            = c("gpt-4","gpt-4o","llama3-70b","mixtral-8x7b"),
temperature      = seq(0.0, 1.0, by = 0.25),
max_tokens       = c(256, 512, 1024),
top_p            = c(0.70, 0.85, 0.95, 1.00),
prompt_style     = c("zero-shot","few-shot","CoT","ToT","self-consistency","reflection"),
few_shot_k       = c(0, 1, 3, 5),
system_role      = c("neutral","helpful","strict","creative"),
decoding         = c("nucleus","temperature","contrastive"),
top_k            = c(0, 20, 40, 80),
presence_penalty = c(0.0, 0.5, 1.0),
frequency_penalty= c(0.0, 0.5, 1.0),
stop_sequences   = c("none","\\n\\n","</tool>"),
n_samples        = c(1, 3, 5),
self_consistency = c(FALSE, TRUE),
chain_depth      = c(1, 2, 3),
retrieval        = c("off","bm25","dense"),
tools_used       = c("none","calculator","code","browser"),
guardrail_level  = c("low","medium","high"),
seed_bucket      = c("fixed","vary-5","vary-10"),
eval_metric      = c("accuracy","bleu","rouge","human-Likert")
)
sizes <- lengths(params)
total <- prod(sizes)
# 2) Base data frame
param_names <- names(params)
df <- data.frame(
parameter = factor(param_names, levels = param_names),
options   = as.numeric(sizes),
index     = seq_along(sizes)
)
df$cum_total <- cumprod(df$options)
# Helper for SI labels
si_lab <- scales::label_number(scale_cut = scales::cut_si(""))
# 3) Single plot: cumulative combos (log scale), x labels show options count
x_labs <- paste0(df$parameter, " (", df$options, ")")
end_lab <- paste0("Final: ", si_lab(max(df$cum_total)), " combos")
p <- ggplot(df, aes(index, cum_total)) +
geom_line() +
geom_point(size = 2) +
annotate(
"text",
x = max(df$index),
y = max(df$cum_total),
label = end_lab,
hjust = 1.5, vjust = 0.5, size = 3.5
) +
coord_cartesian(clip = "off") +
scale_x_continuous(
breaks = df$index,
labels = x_labs,
expand = expansion(mult = c(0.01, 0.08))
) +
scale_y_continuous(
trans = "log10",
labels = si_lab,
expand = expansion(mult = c(0.02, 0.10))
) +
labs(
title = "Language-model configuration space grows multiplicatively",
subtitle = paste0("Even modest per-parameter choices yield ",
format(total, big.mark=","), " unique configurations"),
x = "Parameters (options)",
y = "Total combinations (log scale)"
) +
theme_classic(base_size = 11) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.margin = margin(10, 30, 10, 10)
)
print(p)
ggsave("lm-params-combinatorics_single.png", p, width = 12, height = 6, dpi = 300)
# Minimal, single-plot version -----------------------------------------------
# Only needs ggplot2 and scales
library(ggplot2)
library(scales)
options(scipen = 999)
# 1) Parameter space (same as before)
params <- list(
model            = c("gpt-4","gpt-4o","llama3-70b","mixtral-8x7b"),
temperature      = seq(0.0, 1.0, by = 0.25),
max_tokens       = c(256, 512, 1024),
top_p            = c(0.70, 0.85, 0.95, 1.00),
prompt_style     = c("zero-shot","few-shot","CoT","ToT","self-consistency","reflection"),
few_shot_k       = c(0, 1, 3, 5),
system_role      = c("neutral","helpful","strict","creative"),
decoding         = c("nucleus","temperature","contrastive"),
top_k            = c(0, 20, 40, 80),
presence_penalty = c(0.0, 0.5, 1.0),
frequency_penalty= c(0.0, 0.5, 1.0),
stop_sequences   = c("none","\\n\\n","</tool>"),
n_samples        = c(1, 3, 5),
self_consistency = c(FALSE, TRUE),
chain_depth      = c(1, 2, 3),
retrieval        = c("off","bm25","dense"),
tools_used       = c("none","calculator","code","browser"),
guardrail_level  = c("low","medium","high"),
seed_bucket      = c("fixed","vary-5","vary-10"),
eval_metric      = c("accuracy","bleu","rouge","human-Likert")
)
sizes <- lengths(params)
total <- prod(sizes)
# 2) Base data frame
param_names <- names(params)
df <- data.frame(
parameter = factor(param_names, levels = param_names),
options   = as.numeric(sizes),
index     = seq_along(sizes)
)
df$cum_total <- cumprod(df$options)
# Helper for SI labels
si_lab <- scales::label_number(scale_cut = scales::cut_si(""))
# 3) Single plot: cumulative combos (log scale), x labels show options count
x_labs <- paste0(df$parameter, " (", df$options, ")")
end_lab <- paste0("Final: ", si_lab(max(df$cum_total)), " combos")
p <- ggplot(df, aes(index, cum_total)) +
geom_line() +
geom_point(size = 2) +
coord_cartesian(clip = "off") +
scale_x_continuous(
breaks = df$index,
labels = x_labs,
expand = expansion(mult = c(0.01, 0.08))
) +
scale_y_continuous(
trans = "log10",
labels = si_lab,
expand = expansion(mult = c(0.02, 0.10))
) +
labs(
title = "Language-model configuration space grows multiplicatively",
subtitle = paste0("Even modest per-parameter choices yield ",
format(total, big.mark=","), " unique configurations"),
x = "Parameters (options)",
y = "Total combinations (log scale)"
) +
theme_classic(base_size = 11) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.margin = margin(10, 30, 10, 10)
)
print(p)
ggsave("lm-params-combinatorics_single.png", p, width = 12, height = 6, dpi = 300)
# Minimal, single-plot version -----------------------------------------------
# Only needs ggplot2 and scales
library(ggplot2)
library(scales)
options(scipen = 999)
# 1) Parameter space (same as before)
params <- list(
model            = c("gpt-4.1","gpt-4o","llama3-70b","mixtral-8x7b", "claude-3.5-sonnet", "claude-4-sonnet"),
temperature      = seq(0.0, 1.0, by = 0.25),
max_tokens       = c(256, 512, 1024),
top_p            = c(0.70, 0.85, 0.95, 1.00),
prompt_style     = c("zero-shot","few-shot","CoT","ToT","self-consistency","reflection"),
few_shot_k       = c(0, 1, 3, 5),
system_role      = c("neutral","helpful","strict","creative"),
decoding         = c("nucleus","temperature","contrastive"),
top_k            = c(0, 20, 40, 80),
presence_penalty = c(0.0, 0.5, 1.0),
frequency_penalty= c(0.0, 0.5, 1.0),
stop_sequences   = c("none","\\n\\n","</tool>"),
n_samples        = c(1, 3, 5),
self_consistency = c(FALSE, TRUE),
chain_depth      = c(1, 2, 3),
retrieval        = c("off","bm25","dense"),
tools_used       = c("none","calculator","code","browser"),
guardrail_level  = c("low","medium","high"),
seed_bucket      = c("fixed","vary-5","vary-10"),
eval_metric      = c("accuracy","bleu","rouge","human-Likert")
)
sizes <- lengths(params)
total <- prod(sizes)
# 2) Base data frame
param_names <- names(params)
df <- data.frame(
parameter = factor(param_names, levels = param_names),
options   = as.numeric(sizes),
index     = seq_along(sizes)
)
df$cum_total <- cumprod(df$options)
# Helper for SI labels
si_lab <- scales::label_number(scale_cut = scales::cut_si(""))
# 3) Single plot: cumulative combos (log scale), x labels show options count
x_labs <- paste0(df$parameter, " (", df$options, ")")
end_lab <- paste0("Final: ", si_lab(max(df$cum_total)), " combos")
p <- ggplot(df, aes(index, cum_total)) +
geom_line() +
geom_point(size = 2) +
coord_cartesian(clip = "off") +
scale_x_continuous(
breaks = df$index,
labels = x_labs,
expand = expansion(mult = c(0.01, 0.08))
) +
scale_y_continuous(
trans = "log10",
labels = si_lab,
expand = expansion(mult = c(0.02, 0.10))
) +
labs(
title = "Language-model configuration space grows multiplicatively",
subtitle = paste0("Even modest per-parameter choices yield ",
format(total, big.mark=","), " unique configurations"),
x = "Parameters (options)",
y = "Total combinations (log scale)"
) +
theme_classic(base_size = 11) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.margin = margin(10, 30, 10, 10)
)
print(p)
ggsave("lm-params-combinatorics_single.png", p, width = 12, height = 6, dpi = 300)
